version: "3.9"
networks:
    api:
        name: api-network
services:
  api:
    container_name: api_dev
    build: .
    volumes:
      - ./api:/opt/api # map the code so we can take advantage of uvicorn's --reload
    environment:
      - DB_HOST=${DB_HOST:?err}
      - DB_PORT=${DB_PORT:?err}
      - DB_NAME=${DB_NAME:?err}
      - DB_USERNAME=${DB_USERNAME:?err}
      - DB_PASSWORD=${DB_PASSWORD:?err}
      - POSTGRES_SCHEMA=public
      - ALLOWED_ORIGIN=${ALLOWED_ORIGIN:?err}
      - INIT_DATA_PATH=${INIT_DATA_PATH:?err}
    ports:
      - "5000:5000"
    networks:
      - api
  db:
    container_name: db
    hostname: db
    image: postgres:14-alpine
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?err}
      - POSTGRES_USER=${POSTGRES_USER:?err}
    networks:
      - api
    ports:
      - 4321:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 10s
      retries: 10

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.25
    volumes:
      - ${PWD}/setup_files/pgadmin4-servers.json:/tmp/pgadmin4-servers.json:ro
    ports:
      - 5050:5050
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:?err}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:?err}
      - PGADMIN_LISTEN_ADDRESS=${PGADMIN_LISTEN_ADDRESS:?err}
      - PGADMIN_LISTEN_PORT=${PGADMIN_LISTEN_PORT:?err}
      - PGADMIN_SERVER_JSON_FILE=/tmp/pgadmin4-servers.json
    networks:
      - api
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: curl -s http://pgadmin:5050 > /dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 10s
      timeout: 10s
      retries: 10
